Given an integer n, return all the numbers in the range [1, n] sorted in lexicographical order.

You must write an algorithm that runs in O(n) time and uses O(1) extra space. 
Example 1:

Input: n = 13
Output: [1,10,11,12,13,2,3,4,5,6,7,8,9]
Example 2:

Input: n = 2
Output: [1,2]
-----------------------------------------------------------------------

class Solution {
public:
    vector<int> lexicalOrder(int n) {
        std::vector<int> result;
        for(int i = 1; i <= 9; i++) {
            getNumbers(result, n, i);
        }
        return result;
    }

    void getNumbers(std::vector<int> &result, int &n, int number){
          if(number > n) {
            return;
          }
          if(number <= n){
            result.push_back(number);
            }
            for(int i = 0 ; i <= 9; i++){
                int next = number * 10 + i;
                getNumbers(result, n , next);
            }
        }
 
};
