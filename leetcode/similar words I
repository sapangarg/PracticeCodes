class Solution {
public:
    bool areSentencesSimilar(vector<string>& sentence1, vector<string>& sentence2, vector<vector<string>>& similarPairs) {

        if(sentence1.size() != sentence2.size()){
            return false;
        }

        std::unordered_map<string, vector<string>> similarWords;
        
        for(auto &s : similarPairs){
            similarWords[s[0]].push_back(s[1]);
            similarWords[s[1]].push_back(s[0]);
        }

        for(int i=0; i<sentence1.size(); i++){
            bool found = false;
            if(sentence1[i] == sentence2[i]){
                continue;
            } 

            for(auto &s : similarWords[sentence1[i]]){
                if(sentence2[i] == s){
                    found = true;
                }
            }
            for(auto &s : similarWords[sentence2[i]]){
                if(sentence1[i] == s){
                    found = true;
                }
            }

            if(!found){
                return false;
            }
        }
        
        return true;
    }
};
